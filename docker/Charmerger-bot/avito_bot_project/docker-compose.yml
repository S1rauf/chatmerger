# /avito_bot_project/docker-compose.yml 
version: '3.8'

services:
  # Сервис Redis 
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - webnet
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Сервис PostgreSQL 
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env
    networks:
      - webnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Сервис Приложения-бота
  telegram_bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_telegram_bot
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    expose:
      - "8000"
    networks:
      - webnet
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
  nginx_proxy:
    image: nginx:1.25-alpine
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./landing:/usr/share/nginx/html:ro
    networks:
      - webnet
    depends_on:
      - telegram_bot

networks:
  webnet:
    driver: bridge

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local